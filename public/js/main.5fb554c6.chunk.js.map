{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","utils/api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","cards","onCardDelete","currentUser","useContext","isOwn","owner","_id","likes","some","i","type","onClick","src","link","alt","name","length","Main","onEditAvatar","onEditProfile","onAddPlace","currentUserInfo","style","backgroundImage","avatar","about","map","Footer","PopupWithForm","title","buttonTitle","children","isOpen","onClose","onSubmit","action","ImagePopup","Api","config","this","_baseUrl","baseUrl","_headers","headers","url","method","body","fetch","then","res","ok","json","Promise","reject","status","_fetch","values","JSON","stringify","cardId","authorization","EditProfilePopup","onUpdateUser","useEffect","setName","setDescription","useState","description","e","preventDefault","value","onChange","target","id","required","minLength","maxLength","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","placeholder","AddPlacePopup","cardNameRef","cardLinkRef","App","isEditProfilePopupOpen","setIsEditPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCurrentUser","closeAllPopups","getUserData","userData","catch","err","console","log","setCards","getInitialCards","cardList","Provider","isLiked","takeCardLike","newCard","newCards","c","delCard","newCardsTemplate","filter","patchUserData","patchUserAvatar","data","addUserCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fb554c6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\nreturn (\r\n    <header className=\"header\">\r\n            <div className=\"header__logo\" />\r\n          </header>\r\n)\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n","import React from \"react\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\n\r\n\r\nfunction Card({card, onCardClick, cards, onCardLike, onCardDelete }) {\r\n\r\n      //Контекст\r\n      const currentUser = React.useContext(CurrentUserContext);\r\n\r\n        // Определяем, являемся ли мы владельцем текущей карточки\r\n      const isOwn = card.owner._id === currentUser._id;\r\n\r\n      // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n      const cardDeleteButtonClassName = (\r\n        `card__delete-button ${isOwn ? 'card__delete-button_visible' : 'card__delete-button_hidden'}`\r\n      ); \r\n\r\n      // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n      const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n\r\n      // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n      const cardLikeButtonClassName = `...`; \r\n\r\n\r\n\r\n  function handleClick() {\r\n    onCardClick(card);\r\n  } \r\n\r\n  \r\n    return (\r\n        <li className=\"grid__item\">\r\n        <button className=\"grid__delete-btn\" type=\"button\" onClick={onCardDelete} />\r\n        <img src={card.link} alt={card.name} className=\"grid__image\" onClick={handleClick} />\r\n        <div className=\"grid__text-container\">\r\n          <h2 className=\"grid__text\">{card.name}</h2>\r\n          <div className=\"grid__like-container\">\r\n            <button className=\"grid__like-btn\" type=\"button\" onClick={onCardLike}/>\r\n            <div className=\"grid__like-counter\">{card.likes.length}</div>\r\n          </div>\r\n        </div>\r\n      </li>  \r\n      )\r\n  }\r\n\r\n\r\nexport default Card;","import React from \"react\"\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport Card from \"./Card\"\r\n\r\n\r\nfunction Main({onEditAvatar, onEditProfile, onAddPlace, onCardClick, cards, onCardLike, onCardDelete}) {\r\n\r\n  \r\n    //Контекст\r\n\r\n  const currentUserInfo = React.useContext(CurrentUserContext);\r\n\r\n  \r\n        \r\n    return (\r\n        <main className=\"content\">\r\n        <section className=\"profile\">\r\n          <div className=\"profile__box\">\r\n            <div className=\"profile__avatar\" onClick={onEditAvatar} style={{ backgroundImage: `url(${currentUserInfo.avatar})` }} />\r\n            <div className=\"profile__text-content\">\r\n              <h1 className=\"profile__name\">{currentUserInfo.name}</h1>\r\n              <button className=\"profile__edit-btn\" type=\"button\" onClick={onEditProfile}/>\r\n              <p className=\"profile__description\">{currentUserInfo.about}</p>\r\n            </div>\r\n          </div>\r\n          <button className=\"profile__add-btn\" type=\"button\" onClick={onAddPlace} />\r\n        </section>\r\n        \r\n        <section className=\"grid\">\r\n          <ul className=\"grid__template\">\r\n          \r\n          {cards.map((card) => (<Card key={card._id} card={card} onCardClick={onCardClick} cards={cards} onCardLike={onCardLike} onCardDelete={onCardDelete} />))}\r\n            \r\n           \r\n          </ul>\r\n        </section>\r\n      </main>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">© 2020 Mesto Russia</p>\r\n          </footer>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\n\r\nfunction PopupWithForm({name, title, buttonTitle, children, isOpen, onClose, onSubmit}) {\r\n\r\n  \r\n\r\n\r\n    return (\r\n        <div className={`popup popup_type_${name}  ${isOpen && 'popup_is-open'}`}>\r\n            <form className=\"popup__form\" name={`${name}__form`} action=\"#\" onSubmit={onSubmit}>\r\n              <button className=\"popup__close-btn\" type=\"button\" onClick={onClose} />\r\n              <p className=\"popup__header\">{title}</p>\r\n              {children}\r\n              <button type=\"submit\" className=\"popup__submit-btn\">{buttonTitle}</button>\r\n            </form>\r\n          </div>\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\n\r\nfunction ImagePopup({card, onClose}) {\r\n  \r\nreturn(\r\n    <div className={`popup popup_type_grid-img ${card ? 'popup_is-open' : ''}`}>\r\n            <div className=\"popup__form\">\r\n              <button className=\"popup__close-btn\" type=\"button\" onClick={onClose} />\r\n              <img className=\"popup__image\" src={card.link} alt={card.name} />\r\n              <h2 className=\"popup__title\">{card.name}</h2> \r\n            </div>\r\n          </div>\r\n)\r\n}\r\n\r\nexport default ImagePopup;","class api {\r\n    constructor(config){\r\nthis._baseUrl = config.baseUrl;\r\nthis._headers = config.headers;\r\n\r\n    }\r\n\r\n\r\n    _fetch(url, method, body) {\r\n        return fetch(this._baseUrl + url, {\r\n            method: method,\r\n            headers:\r\n            this._headers,\r\n            body: body\r\n        }).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        })\r\n    }\r\n\r\n        \r\n    getInitialCards() {\r\n      return this._fetch('/cards', 'GET')\r\n    }\r\n  \r\n\r\n  addUserCard(values) {\r\n      return this._fetch('/cards', 'POST', JSON.stringify({\r\n          name: values.name,\r\n          link: values.link\r\n      }))\r\n  }\r\n\r\n  takeCardLike(cardId) {\r\n      return this._fetch(`/cards/likes/${cardId}`, 'PUT')\r\n  }\r\n\r\n  removeCardLke(cardId) {\r\n      return this._fetch(`/cards/likes/${cardId}`, 'DELETE')\r\n  }\r\n\r\n  delCard(cardId) {\r\n      return this._fetch(`/cards/${cardId}`, 'DELETE')\r\n  }\r\n\r\n  getUserData() {\r\n      return this._fetch('/users/me', 'GET')\r\n  }\r\n\r\n  patchUserData(values) {\r\n      return this._fetch('/users/me', 'PATCH', JSON.stringify(\r\n        {\r\n          name: values.name,\r\n          about: values.about\r\n      }))\r\n  }\r\n\r\n  patchUserAvatar(values) {\r\n      return this._fetch('/users/me/avatar', 'PATCH', JSON.stringify({\r\n          avatar: values.avatar\r\n      }))\r\n  }\r\n\r\n \r\n}\r\n\r\n\r\nconst Api = new api({\r\nbaseUrl: \"https://mesto.nomoreparties.co/v1/cohort-18\",\r\nheaders: {\r\n  authorization: \"1b98b7f8-c29f-4d66-ae18-3d1d376d7ed7\",\r\n  \"Content-Type\": \"application/json\"\r\n}\r\n});\r\n\r\nexport default Api;","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser}) {\r\n\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]); \r\n\r\n\r\n    const [name, setName] = React.useState(`${currentUser.name}`);\r\n    const [description, setDescription] = React.useState(`${currentUser.about}`);\r\n\r\n\r\n    function handleChangeName(e) {\r\n        setName(e.target.value);\r\n      }\r\n\r\n      function handleChangeDescription(e) {\r\n        setDescription(e.target.value);\r\n      }\r\n\r\n      function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onUpdateUser({\r\n          name,\r\n          about: description,\r\n        });\r\n      } \r\n      \r\n\r\n    return (\r\n        <PopupWithForm onSubmit={handleSubmit} name=\"edit-profile\" title=\"Редактировать профиль\" buttonTitle=\"Сохранить\" isOpen={isOpen} onClose={onClose} >\r\n        <input type=\"text\" value={name} onChange={handleChangeName} id=\"name\" className=\"popup__input popup__input_invalid popup__text_name\" required minLength={2} maxLength={40}/>\r\n        <span className=\"popup__error popup__error_is-active\" id=\"name-error\" />\r\n        <input type=\"text\" value={description} onChange={handleChangeDescription} id=\"description\" className=\"popup__input popup__input_invalid popup__text_description\" required minLength={2} maxLength={200} />\r\n        <span className=\"popup__error popup__error_is-active\" id=\"description-error\"/></PopupWithForm>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default EditProfilePopup;","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction EditAvatarPopup({isOpen, onClose, onUpdateAvatar}) {\r\n\r\n    const avatarRef = React.useRef();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onUpdateAvatar({\r\n            avatar: avatarRef.current.value\r\n        });\r\n      } \r\n      \r\n      \r\n    return (\r\n        <PopupWithForm onSubmit={handleSubmit} name=\"edit-avatar\" title=\"Обновить аватар\" buttonTitle=\"Сохранить\" isOpen={isOpen} onClose={onClose}>\r\n              <input ref={avatarRef} type=\"url\" name=\"image-src\" id=\"image-src\"  className=\"popup__input popup__source\" placeholder=\"Ссылка на картинку\" required />\r\n                  <span className=\"popup__error popup__error_is-active\" id=\"image-src-error\" />\r\n                </PopupWithForm> \r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n\r\n","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup({isOpen, onClose, onAddPlace}) {\r\n\r\n    const cardNameRef = React.useRef();\r\n    const cardLinkRef = React.useRef();\r\n\r\n\r\n   function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onAddPlace({\r\n        name: cardNameRef.current.value,\r\n        link: cardLinkRef.current.value\r\n    });\r\n   }\r\n    \r\n\r\n    return (\r\n        <PopupWithForm onSubmit={handleSubmit} name=\"add-cards\" title=\"Новое место\" buttonTitle=\"Создать\" isOpen={isOpen} onClose={onClose}>\r\n                  <input ref={cardNameRef} type=\"text\" name=\"image-title\" id=\"image-title\" className=\"popup__input popup__input_invalid popup__text_place\" placeholder=\"Название\" required minLength={2} maxLength={30} />\r\n                  <span className=\"popup__error popup__error_is-active\" id=\"image-title-error\" />\r\n                  <input ref={cardLinkRef} type=\"url\" name=\"image-src\" id=\"image-src\" className=\"popup__input popup__source\" placeholder=\"Ссылка на картинку\" required />\r\n                  <span className=\"popup__error popup__error_is-active\" id=\"image-src-error\" /></PopupWithForm>\r\n    )\r\n\r\n}\r\n\r\nexport default AddPlacePopup;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport ImagePopup from \"./ImagePopup\";\r\nimport Api from \"../utils/api\";\r\nimport EditProfilePopup from \"./EditProfilePopup\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup\";\r\nimport AddPlacePopup from \"./AddPlacePopup\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n  //Открытие попапов \r\n  const [isEditProfilePopupOpen, setIsEditPopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState(false);\r\n\r\n  // Стейт, отвечающий за данные текущего пользователя\r\n  const [currentUser, setCurrentUser] = React.useState({ name: 'Gudetama', about: \"lazylazy\", avatar: \"https://i.pinimg.com/originals/37/04/ef/3704efd795fcee0461946434db3c92c2.jpg\" });\r\n\r\n    React.useEffect(() => {\r\n      Api.getUserData().then((userData) => {\r\n        setCurrentUser(userData)\r\n      }).catch((err) => {\r\n          console.log(\"Не загрузился юзер: \" + err);\r\n      });\r\n    }, []);\r\n\r\n\r\n      function handleEditProfileClick() {\r\n        setIsEditPopupOpen(true);\r\n      }\r\n    \r\n      function handleAddPlaceClick() {\r\n        setIsAddPlacePopupOpen(true);\r\n      }\r\n\r\n      function handleEditAvatarClick(){\r\n        setIsEditAvatarPopupOpen(true);\r\n      }\r\n\r\n      function handleCardClick(card) {\r\n        setSelectedCard(card);\r\n      }\r\n\r\n     // Закрытие попапов\r\n     function closeAllPopups() {\r\n      setIsEditPopupOpen(false);\r\n      setIsAddPlacePopupOpen(false);\r\n      setIsEditAvatarPopupOpen(false);\r\n      setSelectedCard(false);\r\n    }\r\n\r\n\r\n    // Обновление информации о текущем юзере\r\n    function handleUpdateUser(values) {\r\n      Api.patchUserData(values).then(userData => {\r\n        setCurrentUser(userData);\r\n        closeAllPopups();\r\n      }).catch((err) => {\r\n          console.log(\"Не загрузить описание профиля: \" + err);\r\n      })\r\n    } \r\n\r\n    function handleUpdateAvatar(values) {\r\n      Api.patchUserAvatar(values).then(userData => {\r\n        setCurrentUser(userData);\r\n        closeAllPopups();\r\n      }).catch((err) => {\r\n          console.log(\"Не загрузить аватар: \" + err);\r\n      })\r\n    }\r\n   \r\n\r\n    //Карточки и все, что с ними связано\r\n\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n\r\n      Api.getInitialCards().then(cardList => setCards(cardList)\r\n      ).catch((err) => {\r\n          console.log(\"Не загрузились карточки: \" + err);\r\n      });\r\n    }, []);\r\n    \r\n\r\n    function handleAddPlaceSubmit(data) {\r\n      Api.addUserCard(data).then(newCard => setCards([newCard, ...cards])).catch((err) => {\r\n          console.log(\"Не добавить карточку: \" + err);\r\n      })\r\n    }\r\n\r\n\r\n\r\n    function handleCardLike(card) {\r\n      // Снова проверяем, есть ли уже лайк на этой карточке\r\n      const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n      \r\n      // Отправляем запрос в API и получаем обновлённые данные карточки\r\n      Api.takeCardLike(card._id, !isLiked).then((newCard) => {\r\n          // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n        // Обновляем стейт\r\n        setCards(newCards);\r\n      });\r\n    } \r\n\r\n\r\n      function handleCardDelete(card) {\r\n      Api.delCard(card._id).then(() => {\r\n        const newCardsTemplate = cards.filter((c) => c._id === card._id);\r\n        setCards(newCardsTemplate);\r\n    }).catch((err) => {\r\n          console.log(\"Не удаляется карточка: \" + err); \r\n    }) \r\n    }\r\n\r\n    \r\n      \r\n\r\n      return (\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n\r\n        <div className=\"page\">\r\n          <div className=\"page__content\">\r\n\r\n              <Header />\r\n              <Main onEditProfile={handleEditProfileClick} \r\n                    onAddPlace={handleAddPlaceClick}\r\n                    onEditAvatar={handleEditAvatarClick}\r\n                    onCardClick={handleCardClick}\r\n                    cards={cards}\r\n                    onCardLike={handleCardLike}\r\n                    onCardDelete={handleCardDelete}/>\r\n              <Footer />\r\n              <ImagePopup card={selectedCard} onClose={closeAllPopups} />\r\n              <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\r\n              <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar}/>\r\n              <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit}/>\r\n              <PopupWithForm name=\"type_submit\" title=\"Вы уверены?\" buttonTitle=\"Да\"/>\r\n\r\n              \r\n          </div>\r\n        </div>\r\n      </CurrentUserContext.Provider>\r\n  );\r\n  \r\n};\r\n  \r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}